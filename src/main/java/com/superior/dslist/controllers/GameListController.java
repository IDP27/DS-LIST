package com.superior.dslist.controllers;
// Define o pacote onde essa classe est√° localizada (organiza√ß√£o do projeto)

import com.superior.dslist.Dto.GameListDTO;  // DTO para representar listas de jogos
import com.superior.dslist.Dto.GameMinDTO;   // DTO para representar jogos em formato resumido
import com.superior.dslist.Dto.ReplacementDTO;
import com.superior.dslist.services.GameListService; // Servi√ßo que cuida da l√≥gica de listas
import com.superior.dslist.services.GameService;     // Servi√ßo que cuida da l√≥gica dos jogos

import org.springframework.beans.factory.annotation.Autowired; // Permite inje√ß√£o de depend√™ncia
import org.springframework.web.bind.annotation.*;

import java.util.List; // Estrutura de lista do Java

@RestController
// Diz ao Spring que essa classe √© um controlador REST (responde a chamadas HTTP com JSON)

@RequestMapping(value = "/lists")
// Define que todas as rotas deste controller come√ßam com "/lists"

public class GameListController {
// Declara√ß√£o da classe respons√°vel por controlar as rotas de listas de jogos

    @Autowired
    private GameListService gameListService;
    // Injeta automaticamente o servi√ßo que cuida das listas de jogos

    @Autowired
    private GameService gameService;
    // Injeta automaticamente o servi√ßo que cuida dos jogos

    @GetMapping
    // Esse m√©todo vai responder a requisi√ß√µes GET em "/lists"

    public List<GameListDTO> findAll(){
        // M√©todo que retorna todas as listas de jogos

        List<GameListDTO> result = gameListService.findAll();
        // Chama o servi√ßo que busca todas as listas no banco de dados

        return result;
        // Retorna a lista de GameListDTO em formato JSON
    }

    @GetMapping(value = "/{listId}/games")
    // Esse m√©todo responde a GET em "/lists/{listId}/games"

    public List<GameMinDTO> findByList(@PathVariable Long listId) {
        // @PathVariable ‚Üí pega o valor de {listId} na URL e coloca na vari√°vel listId

        List<GameMinDTO> result = gameService.findByList(listId);
        // Chama o servi√ßo que retorna os jogos dessa lista espec√≠fica

        return result;
        // Retorna a lista de jogos resumidos (GameMinDTO) em formato JSON
    }
    @PostMapping (value = "/{listId}/replacement")

    public void move(@PathVariable Long listId, @RequestBody ReplacementDTO body) {
        // M√©todo que recebe uma requisi√ß√£o POST para mover jogos dentro de uma lista

        gameListService.move(listId, body.getSourceIndex(), body.getDestinationIndex());
        // Chama o servi√ßo para mover o jogo da posi√ß√£o sourceIndex para destinationIndex na lista especificada
    }


}
// Fim da classe GameListController

// Essa classe controla as rotas relacionadas √†s listas de jogos, permitindo buscar todas as listas e os jogos de uma lista espec√≠fica.

// Ela usa os servi√ßos GameListService e GameService para acessar os dados necess√°rios.
// As respostas s√£o retornadas em formato JSON, facilitando a integra√ß√£o com front-ends e outras aplica√ß√µes.

/*üìå Resumo r√°pido:
	‚Ä¢	GET /lists ‚Üí retorna todas as listas de jogos.
	‚Ä¢	GET /lists/{listId}/games ‚Üí retorna todos os jogos de uma lista espec√≠fica.
	‚Ä¢	GameListService ‚Üí cuida das listas.
	‚Ä¢	GameService ‚Üí cuida dos jogos.*/